# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: karps/proto/interface.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from karps.proto import graph_pb2 as karps_dot_proto_dot_graph__pb2
from karps.proto import computation_pb2 as karps_dot_proto_dot_computation__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='karps/proto/interface.proto',
  package='karps.core',
  syntax='proto3',
  serialized_pb=_b('\n\x1bkarps/proto/interface.proto\x12\nkarps.core\x1a\x17karps/proto/graph.proto\x1a\x1dkarps/proto/computation.proto\"H\n\x14\x43reateSessionRequest\x12\x30\n\x11requested_session\x18\x01 \x01(\x0b\x32\x15.karps.core.SessionId\"\x17\n\x15\x43reateSessionResponse\"\xc9\x01\n\x18\x43reateComputationRequest\x12&\n\x07session\x18\x01 \x01(\x0b\x32\x15.karps.core.SessionId\x12 \n\x05graph\x18\x03 \x01(\x0b\x32\x11.karps.core.Graph\x12\x38\n\x15requested_computation\x18\x04 \x01(\x0b\x32\x19.karps.core.ComputationId\x12)\n\x0frequested_paths\x18\x05 \x03(\x0b\x32\x10.karps.core.Path\"\x1b\n\x19\x43reateComputationResponse\"\x9d\x01\n\x18\x43omputationStatusRequest\x12&\n\x07session\x18\x01 \x01(\x0b\x32\x15.karps.core.SessionId\x12.\n\x0b\x63omputation\x18\x02 \x01(\x0b\x32\x19.karps.core.ComputationId\x12)\n\x0frequested_paths\x18\x03 \x03(\x0b\x32\x10.karps.core.Path\"l\n\x15ResourceStatusRequest\x12&\n\x07session\x18\x01 \x01(\x0b\x32\x15.karps.core.SessionId\x12+\n\tresources\x18\x02 \x03(\x0b\x32\x18.karps.core.ResourcePath\"[\n\x12HdfsResourceStatus\x12&\n\x04path\x18\x01 \x01(\x0b\x32\x18.karps.core.ResourcePath\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0e\n\x06return\x18\x03 \x01(\t\"F\n\x16ResourceStatusResponse\x12,\n\x04hdfs\x18\x01 \x03(\x0b\x32\x1e.karps.core.HdfsResourceStatus\"\x8a\x02\n\x19\x43omputationStreamResponse\x12&\n\x07session\x18\x01 \x01(\x0b\x32\x15.karps.core.SessionId\x12.\n\x0b\x63omputation\x18\x02 \x01(\x0b\x32\x19.karps.core.ComputationId\x12(\n\x0bstart_graph\x18\x03 \x01(\x0b\x32\x11.karps.core.GraphH\x00\x12)\n\x0cpinned_graph\x18\x04 \x01(\x0b\x32\x11.karps.core.GraphH\x00\x12\x35\n\x07results\x18\x05 \x01(\x0b\x32\".karps.core.BatchComputationResultH\x00\x42\t\n\x07updates2\xe5\x03\n\tKarpsMain\x12T\n\rCreateSession\x12 .karps.core.CreateSessionRequest\x1a!.karps.core.CreateSessionResponse\x12`\n\x11\x43reateComputation\x12$.karps.core.CreateComputationRequest\x1a%.karps.core.CreateComputationResponse\x12]\n\x11\x43omputationStatus\x12$.karps.core.ComputationStatusRequest\x1a\".karps.core.BatchComputationResult\x12h\n\x17StreamCreateComputation\x12$.karps.core.CreateComputationRequest\x1a%.karps.core.ComputationStreamResponse0\x01\x12W\n\x0eResourceStatus\x12!.karps.core.ResourceStatusRequest\x1a\".karps.core.ResourceStatusResponseb\x06proto3')
  ,
  dependencies=[karps_dot_proto_dot_graph__pb2.DESCRIPTOR,karps_dot_proto_dot_computation__pb2.DESCRIPTOR,])




_CREATESESSIONREQUEST = _descriptor.Descriptor(
  name='CreateSessionRequest',
  full_name='karps.core.CreateSessionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requested_session', full_name='karps.core.CreateSessionRequest.requested_session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=171,
)


_CREATESESSIONRESPONSE = _descriptor.Descriptor(
  name='CreateSessionResponse',
  full_name='karps.core.CreateSessionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=173,
  serialized_end=196,
)


_CREATECOMPUTATIONREQUEST = _descriptor.Descriptor(
  name='CreateComputationRequest',
  full_name='karps.core.CreateComputationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='karps.core.CreateComputationRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='graph', full_name='karps.core.CreateComputationRequest.graph', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requested_computation', full_name='karps.core.CreateComputationRequest.requested_computation', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requested_paths', full_name='karps.core.CreateComputationRequest.requested_paths', index=3,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=199,
  serialized_end=400,
)


_CREATECOMPUTATIONRESPONSE = _descriptor.Descriptor(
  name='CreateComputationResponse',
  full_name='karps.core.CreateComputationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=402,
  serialized_end=429,
)


_COMPUTATIONSTATUSREQUEST = _descriptor.Descriptor(
  name='ComputationStatusRequest',
  full_name='karps.core.ComputationStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='karps.core.ComputationStatusRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='computation', full_name='karps.core.ComputationStatusRequest.computation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requested_paths', full_name='karps.core.ComputationStatusRequest.requested_paths', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=432,
  serialized_end=589,
)


_RESOURCESTATUSREQUEST = _descriptor.Descriptor(
  name='ResourceStatusRequest',
  full_name='karps.core.ResourceStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='karps.core.ResourceStatusRequest.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resources', full_name='karps.core.ResourceStatusRequest.resources', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=591,
  serialized_end=699,
)


_HDFSRESOURCESTATUS = _descriptor.Descriptor(
  name='HdfsResourceStatus',
  full_name='karps.core.HdfsResourceStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='karps.core.HdfsResourceStatus.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='karps.core.HdfsResourceStatus.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='return', full_name='karps.core.HdfsResourceStatus.return', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=701,
  serialized_end=792,
)


_RESOURCESTATUSRESPONSE = _descriptor.Descriptor(
  name='ResourceStatusResponse',
  full_name='karps.core.ResourceStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hdfs', full_name='karps.core.ResourceStatusResponse.hdfs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=794,
  serialized_end=864,
)


_COMPUTATIONSTREAMRESPONSE = _descriptor.Descriptor(
  name='ComputationStreamResponse',
  full_name='karps.core.ComputationStreamResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='karps.core.ComputationStreamResponse.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='computation', full_name='karps.core.ComputationStreamResponse.computation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_graph', full_name='karps.core.ComputationStreamResponse.start_graph', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pinned_graph', full_name='karps.core.ComputationStreamResponse.pinned_graph', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='results', full_name='karps.core.ComputationStreamResponse.results', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='updates', full_name='karps.core.ComputationStreamResponse.updates',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=867,
  serialized_end=1133,
)

_CREATESESSIONREQUEST.fields_by_name['requested_session'].message_type = karps_dot_proto_dot_computation__pb2._SESSIONID
_CREATECOMPUTATIONREQUEST.fields_by_name['session'].message_type = karps_dot_proto_dot_computation__pb2._SESSIONID
_CREATECOMPUTATIONREQUEST.fields_by_name['graph'].message_type = karps_dot_proto_dot_graph__pb2._GRAPH
_CREATECOMPUTATIONREQUEST.fields_by_name['requested_computation'].message_type = karps_dot_proto_dot_computation__pb2._COMPUTATIONID
_CREATECOMPUTATIONREQUEST.fields_by_name['requested_paths'].message_type = karps_dot_proto_dot_graph__pb2._PATH
_COMPUTATIONSTATUSREQUEST.fields_by_name['session'].message_type = karps_dot_proto_dot_computation__pb2._SESSIONID
_COMPUTATIONSTATUSREQUEST.fields_by_name['computation'].message_type = karps_dot_proto_dot_computation__pb2._COMPUTATIONID
_COMPUTATIONSTATUSREQUEST.fields_by_name['requested_paths'].message_type = karps_dot_proto_dot_graph__pb2._PATH
_RESOURCESTATUSREQUEST.fields_by_name['session'].message_type = karps_dot_proto_dot_computation__pb2._SESSIONID
_RESOURCESTATUSREQUEST.fields_by_name['resources'].message_type = karps_dot_proto_dot_computation__pb2._RESOURCEPATH
_HDFSRESOURCESTATUS.fields_by_name['path'].message_type = karps_dot_proto_dot_computation__pb2._RESOURCEPATH
_RESOURCESTATUSRESPONSE.fields_by_name['hdfs'].message_type = _HDFSRESOURCESTATUS
_COMPUTATIONSTREAMRESPONSE.fields_by_name['session'].message_type = karps_dot_proto_dot_computation__pb2._SESSIONID
_COMPUTATIONSTREAMRESPONSE.fields_by_name['computation'].message_type = karps_dot_proto_dot_computation__pb2._COMPUTATIONID
_COMPUTATIONSTREAMRESPONSE.fields_by_name['start_graph'].message_type = karps_dot_proto_dot_graph__pb2._GRAPH
_COMPUTATIONSTREAMRESPONSE.fields_by_name['pinned_graph'].message_type = karps_dot_proto_dot_graph__pb2._GRAPH
_COMPUTATIONSTREAMRESPONSE.fields_by_name['results'].message_type = karps_dot_proto_dot_computation__pb2._BATCHCOMPUTATIONRESULT
_COMPUTATIONSTREAMRESPONSE.oneofs_by_name['updates'].fields.append(
  _COMPUTATIONSTREAMRESPONSE.fields_by_name['start_graph'])
_COMPUTATIONSTREAMRESPONSE.fields_by_name['start_graph'].containing_oneof = _COMPUTATIONSTREAMRESPONSE.oneofs_by_name['updates']
_COMPUTATIONSTREAMRESPONSE.oneofs_by_name['updates'].fields.append(
  _COMPUTATIONSTREAMRESPONSE.fields_by_name['pinned_graph'])
_COMPUTATIONSTREAMRESPONSE.fields_by_name['pinned_graph'].containing_oneof = _COMPUTATIONSTREAMRESPONSE.oneofs_by_name['updates']
_COMPUTATIONSTREAMRESPONSE.oneofs_by_name['updates'].fields.append(
  _COMPUTATIONSTREAMRESPONSE.fields_by_name['results'])
_COMPUTATIONSTREAMRESPONSE.fields_by_name['results'].containing_oneof = _COMPUTATIONSTREAMRESPONSE.oneofs_by_name['updates']
DESCRIPTOR.message_types_by_name['CreateSessionRequest'] = _CREATESESSIONREQUEST
DESCRIPTOR.message_types_by_name['CreateSessionResponse'] = _CREATESESSIONRESPONSE
DESCRIPTOR.message_types_by_name['CreateComputationRequest'] = _CREATECOMPUTATIONREQUEST
DESCRIPTOR.message_types_by_name['CreateComputationResponse'] = _CREATECOMPUTATIONRESPONSE
DESCRIPTOR.message_types_by_name['ComputationStatusRequest'] = _COMPUTATIONSTATUSREQUEST
DESCRIPTOR.message_types_by_name['ResourceStatusRequest'] = _RESOURCESTATUSREQUEST
DESCRIPTOR.message_types_by_name['HdfsResourceStatus'] = _HDFSRESOURCESTATUS
DESCRIPTOR.message_types_by_name['ResourceStatusResponse'] = _RESOURCESTATUSRESPONSE
DESCRIPTOR.message_types_by_name['ComputationStreamResponse'] = _COMPUTATIONSTREAMRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CreateSessionRequest = _reflection.GeneratedProtocolMessageType('CreateSessionRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATESESSIONREQUEST,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.CreateSessionRequest)
  ))
_sym_db.RegisterMessage(CreateSessionRequest)

CreateSessionResponse = _reflection.GeneratedProtocolMessageType('CreateSessionResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATESESSIONRESPONSE,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.CreateSessionResponse)
  ))
_sym_db.RegisterMessage(CreateSessionResponse)

CreateComputationRequest = _reflection.GeneratedProtocolMessageType('CreateComputationRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATECOMPUTATIONREQUEST,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.CreateComputationRequest)
  ))
_sym_db.RegisterMessage(CreateComputationRequest)

CreateComputationResponse = _reflection.GeneratedProtocolMessageType('CreateComputationResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATECOMPUTATIONRESPONSE,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.CreateComputationResponse)
  ))
_sym_db.RegisterMessage(CreateComputationResponse)

ComputationStatusRequest = _reflection.GeneratedProtocolMessageType('ComputationStatusRequest', (_message.Message,), dict(
  DESCRIPTOR = _COMPUTATIONSTATUSREQUEST,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.ComputationStatusRequest)
  ))
_sym_db.RegisterMessage(ComputationStatusRequest)

ResourceStatusRequest = _reflection.GeneratedProtocolMessageType('ResourceStatusRequest', (_message.Message,), dict(
  DESCRIPTOR = _RESOURCESTATUSREQUEST,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.ResourceStatusRequest)
  ))
_sym_db.RegisterMessage(ResourceStatusRequest)

HdfsResourceStatus = _reflection.GeneratedProtocolMessageType('HdfsResourceStatus', (_message.Message,), dict(
  DESCRIPTOR = _HDFSRESOURCESTATUS,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.HdfsResourceStatus)
  ))
_sym_db.RegisterMessage(HdfsResourceStatus)

ResourceStatusResponse = _reflection.GeneratedProtocolMessageType('ResourceStatusResponse', (_message.Message,), dict(
  DESCRIPTOR = _RESOURCESTATUSRESPONSE,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.ResourceStatusResponse)
  ))
_sym_db.RegisterMessage(ResourceStatusResponse)

ComputationStreamResponse = _reflection.GeneratedProtocolMessageType('ComputationStreamResponse', (_message.Message,), dict(
  DESCRIPTOR = _COMPUTATIONSTREAMRESPONSE,
  __module__ = 'karps.proto.interface_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.ComputationStreamResponse)
  ))
_sym_db.RegisterMessage(ComputationStreamResponse)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class KarpsMainStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CreateSession = channel.unary_unary(
          '/karps.core.KarpsMain/CreateSession',
          request_serializer=CreateSessionRequest.SerializeToString,
          response_deserializer=CreateSessionResponse.FromString,
          )
      self.CreateComputation = channel.unary_unary(
          '/karps.core.KarpsMain/CreateComputation',
          request_serializer=CreateComputationRequest.SerializeToString,
          response_deserializer=CreateComputationResponse.FromString,
          )
      self.ComputationStatus = channel.unary_unary(
          '/karps.core.KarpsMain/ComputationStatus',
          request_serializer=ComputationStatusRequest.SerializeToString,
          response_deserializer=karps_dot_proto_dot_computation__pb2.BatchComputationResult.FromString,
          )
      self.StreamCreateComputation = channel.unary_stream(
          '/karps.core.KarpsMain/StreamCreateComputation',
          request_serializer=CreateComputationRequest.SerializeToString,
          response_deserializer=ComputationStreamResponse.FromString,
          )
      self.ResourceStatus = channel.unary_unary(
          '/karps.core.KarpsMain/ResourceStatus',
          request_serializer=ResourceStatusRequest.SerializeToString,
          response_deserializer=ResourceStatusResponse.FromString,
          )


  class KarpsMainServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CreateSession(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateComputation(self, request, context):
      """TODO: this is not necessary with the stream
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ComputationStatus(self, request, context):
      """TODO: return a stream response too.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StreamCreateComputation(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ResourceStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_KarpsMainServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateSession': grpc.unary_unary_rpc_method_handler(
            servicer.CreateSession,
            request_deserializer=CreateSessionRequest.FromString,
            response_serializer=CreateSessionResponse.SerializeToString,
        ),
        'CreateComputation': grpc.unary_unary_rpc_method_handler(
            servicer.CreateComputation,
            request_deserializer=CreateComputationRequest.FromString,
            response_serializer=CreateComputationResponse.SerializeToString,
        ),
        'ComputationStatus': grpc.unary_unary_rpc_method_handler(
            servicer.ComputationStatus,
            request_deserializer=ComputationStatusRequest.FromString,
            response_serializer=karps_dot_proto_dot_computation__pb2.BatchComputationResult.SerializeToString,
        ),
        'StreamCreateComputation': grpc.unary_stream_rpc_method_handler(
            servicer.StreamCreateComputation,
            request_deserializer=CreateComputationRequest.FromString,
            response_serializer=ComputationStreamResponse.SerializeToString,
        ),
        'ResourceStatus': grpc.unary_unary_rpc_method_handler(
            servicer.ResourceStatus,
            request_deserializer=ResourceStatusRequest.FromString,
            response_serializer=ResourceStatusResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'karps.core.KarpsMain', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaKarpsMainServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateSession(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateComputation(self, request, context):
      """TODO: this is not necessary with the stream
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ComputationStatus(self, request, context):
      """TODO: return a stream response too.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StreamCreateComputation(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ResourceStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaKarpsMainStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateSession(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateSession.future = None
    def CreateComputation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """TODO: this is not necessary with the stream
      """
      raise NotImplementedError()
    CreateComputation.future = None
    def ComputationStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """TODO: return a stream response too.
      """
      raise NotImplementedError()
    ComputationStatus.future = None
    def StreamCreateComputation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def ResourceStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ResourceStatus.future = None


  def beta_create_KarpsMain_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('karps.core.KarpsMain', 'ComputationStatus'): ComputationStatusRequest.FromString,
      ('karps.core.KarpsMain', 'CreateComputation'): CreateComputationRequest.FromString,
      ('karps.core.KarpsMain', 'CreateSession'): CreateSessionRequest.FromString,
      ('karps.core.KarpsMain', 'ResourceStatus'): ResourceStatusRequest.FromString,
      ('karps.core.KarpsMain', 'StreamCreateComputation'): CreateComputationRequest.FromString,
    }
    response_serializers = {
      ('karps.core.KarpsMain', 'ComputationStatus'): karps_dot_proto_dot_computation__pb2.BatchComputationResult.SerializeToString,
      ('karps.core.KarpsMain', 'CreateComputation'): CreateComputationResponse.SerializeToString,
      ('karps.core.KarpsMain', 'CreateSession'): CreateSessionResponse.SerializeToString,
      ('karps.core.KarpsMain', 'ResourceStatus'): ResourceStatusResponse.SerializeToString,
      ('karps.core.KarpsMain', 'StreamCreateComputation'): ComputationStreamResponse.SerializeToString,
    }
    method_implementations = {
      ('karps.core.KarpsMain', 'ComputationStatus'): face_utilities.unary_unary_inline(servicer.ComputationStatus),
      ('karps.core.KarpsMain', 'CreateComputation'): face_utilities.unary_unary_inline(servicer.CreateComputation),
      ('karps.core.KarpsMain', 'CreateSession'): face_utilities.unary_unary_inline(servicer.CreateSession),
      ('karps.core.KarpsMain', 'ResourceStatus'): face_utilities.unary_unary_inline(servicer.ResourceStatus),
      ('karps.core.KarpsMain', 'StreamCreateComputation'): face_utilities.unary_stream_inline(servicer.StreamCreateComputation),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_KarpsMain_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('karps.core.KarpsMain', 'ComputationStatus'): ComputationStatusRequest.SerializeToString,
      ('karps.core.KarpsMain', 'CreateComputation'): CreateComputationRequest.SerializeToString,
      ('karps.core.KarpsMain', 'CreateSession'): CreateSessionRequest.SerializeToString,
      ('karps.core.KarpsMain', 'ResourceStatus'): ResourceStatusRequest.SerializeToString,
      ('karps.core.KarpsMain', 'StreamCreateComputation'): CreateComputationRequest.SerializeToString,
    }
    response_deserializers = {
      ('karps.core.KarpsMain', 'ComputationStatus'): karps_dot_proto_dot_computation__pb2.BatchComputationResult.FromString,
      ('karps.core.KarpsMain', 'CreateComputation'): CreateComputationResponse.FromString,
      ('karps.core.KarpsMain', 'CreateSession'): CreateSessionResponse.FromString,
      ('karps.core.KarpsMain', 'ResourceStatus'): ResourceStatusResponse.FromString,
      ('karps.core.KarpsMain', 'StreamCreateComputation'): ComputationStreamResponse.FromString,
    }
    cardinalities = {
      'ComputationStatus': cardinality.Cardinality.UNARY_UNARY,
      'CreateComputation': cardinality.Cardinality.UNARY_UNARY,
      'CreateSession': cardinality.Cardinality.UNARY_UNARY,
      'ResourceStatus': cardinality.Cardinality.UNARY_UNARY,
      'StreamCreateComputation': cardinality.Cardinality.UNARY_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'karps.core.KarpsMain', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
