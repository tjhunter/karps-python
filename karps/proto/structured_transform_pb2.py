# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: karps/proto/structured_transform.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='karps/proto/structured_transform.proto',
  package='karps.core',
  syntax='proto3',
  serialized_pb=_b('\n&karps/proto/structured_transform.proto\x12\nkarps.core\"\xba\x01\n\x06\x43olumn\x12-\n\x06struct\x18\x01 \x01(\x0b\x32\x1b.karps.core.ColumnStructureH\x00\x12.\n\x08\x66unction\x18\x02 \x01(\x0b\x32\x1a.karps.core.ColumnFunctionH\x00\x12\x32\n\nextraction\x18\x03 \x01(\x0b\x32\x1c.karps.core.ColumnExtractionH\x00\x12\x12\n\nfield_name\x18\n \x01(\tB\t\n\x07\x63ontent\"5\n\x0f\x43olumnStructure\x12\"\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x12.karps.core.Column\"K\n\x0e\x43olumnFunction\x12\x15\n\rfunction_name\x18\x01 \x01(\t\x12\"\n\x06inputs\x18\x02 \x03(\x0b\x32\x12.karps.core.Column\" \n\x10\x43olumnExtraction\x12\x0c\n\x04path\x18\x01 \x03(\t\"\x8e\x01\n\x0b\x41ggregation\x12-\n\x02op\x18\x01 \x01(\x0b\x32\x1f.karps.core.AggregationFunctionH\x00\x12\x32\n\x06struct\x18\x02 \x01(\x0b\x32 .karps.core.AggregationStructureH\x00\x12\x12\n\nfield_name\x18\x03 \x01(\tB\x08\n\x06\x61gg_op\"Z\n\x13\x41ggregationFunction\x12\x15\n\rfunction_name\x18\x01 \x01(\t\x12,\n\x06inputs\x18\x02 \x03(\x0b\x32\x1c.karps.core.ColumnExtraction\"?\n\x14\x41ggregationStructure\x12\'\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x17.karps.core.Aggregationb\x06proto3')
)




_COLUMN = _descriptor.Descriptor(
  name='Column',
  full_name='karps.core.Column',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='struct', full_name='karps.core.Column.struct', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='function', full_name='karps.core.Column.function', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='extraction', full_name='karps.core.Column.extraction', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='field_name', full_name='karps.core.Column.field_name', index=3,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='karps.core.Column.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=55,
  serialized_end=241,
)


_COLUMNSTRUCTURE = _descriptor.Descriptor(
  name='ColumnStructure',
  full_name='karps.core.ColumnStructure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fields', full_name='karps.core.ColumnStructure.fields', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=243,
  serialized_end=296,
)


_COLUMNFUNCTION = _descriptor.Descriptor(
  name='ColumnFunction',
  full_name='karps.core.ColumnFunction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='function_name', full_name='karps.core.ColumnFunction.function_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inputs', full_name='karps.core.ColumnFunction.inputs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=373,
)


_COLUMNEXTRACTION = _descriptor.Descriptor(
  name='ColumnExtraction',
  full_name='karps.core.ColumnExtraction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='karps.core.ColumnExtraction.path', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=407,
)


_AGGREGATION = _descriptor.Descriptor(
  name='Aggregation',
  full_name='karps.core.Aggregation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='karps.core.Aggregation.op', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='struct', full_name='karps.core.Aggregation.struct', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='field_name', full_name='karps.core.Aggregation.field_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='agg_op', full_name='karps.core.Aggregation.agg_op',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=410,
  serialized_end=552,
)


_AGGREGATIONFUNCTION = _descriptor.Descriptor(
  name='AggregationFunction',
  full_name='karps.core.AggregationFunction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='function_name', full_name='karps.core.AggregationFunction.function_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inputs', full_name='karps.core.AggregationFunction.inputs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=554,
  serialized_end=644,
)


_AGGREGATIONSTRUCTURE = _descriptor.Descriptor(
  name='AggregationStructure',
  full_name='karps.core.AggregationStructure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fields', full_name='karps.core.AggregationStructure.fields', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=646,
  serialized_end=709,
)

_COLUMN.fields_by_name['struct'].message_type = _COLUMNSTRUCTURE
_COLUMN.fields_by_name['function'].message_type = _COLUMNFUNCTION
_COLUMN.fields_by_name['extraction'].message_type = _COLUMNEXTRACTION
_COLUMN.oneofs_by_name['content'].fields.append(
  _COLUMN.fields_by_name['struct'])
_COLUMN.fields_by_name['struct'].containing_oneof = _COLUMN.oneofs_by_name['content']
_COLUMN.oneofs_by_name['content'].fields.append(
  _COLUMN.fields_by_name['function'])
_COLUMN.fields_by_name['function'].containing_oneof = _COLUMN.oneofs_by_name['content']
_COLUMN.oneofs_by_name['content'].fields.append(
  _COLUMN.fields_by_name['extraction'])
_COLUMN.fields_by_name['extraction'].containing_oneof = _COLUMN.oneofs_by_name['content']
_COLUMNSTRUCTURE.fields_by_name['fields'].message_type = _COLUMN
_COLUMNFUNCTION.fields_by_name['inputs'].message_type = _COLUMN
_AGGREGATION.fields_by_name['op'].message_type = _AGGREGATIONFUNCTION
_AGGREGATION.fields_by_name['struct'].message_type = _AGGREGATIONSTRUCTURE
_AGGREGATION.oneofs_by_name['agg_op'].fields.append(
  _AGGREGATION.fields_by_name['op'])
_AGGREGATION.fields_by_name['op'].containing_oneof = _AGGREGATION.oneofs_by_name['agg_op']
_AGGREGATION.oneofs_by_name['agg_op'].fields.append(
  _AGGREGATION.fields_by_name['struct'])
_AGGREGATION.fields_by_name['struct'].containing_oneof = _AGGREGATION.oneofs_by_name['agg_op']
_AGGREGATIONFUNCTION.fields_by_name['inputs'].message_type = _COLUMNEXTRACTION
_AGGREGATIONSTRUCTURE.fields_by_name['fields'].message_type = _AGGREGATION
DESCRIPTOR.message_types_by_name['Column'] = _COLUMN
DESCRIPTOR.message_types_by_name['ColumnStructure'] = _COLUMNSTRUCTURE
DESCRIPTOR.message_types_by_name['ColumnFunction'] = _COLUMNFUNCTION
DESCRIPTOR.message_types_by_name['ColumnExtraction'] = _COLUMNEXTRACTION
DESCRIPTOR.message_types_by_name['Aggregation'] = _AGGREGATION
DESCRIPTOR.message_types_by_name['AggregationFunction'] = _AGGREGATIONFUNCTION
DESCRIPTOR.message_types_by_name['AggregationStructure'] = _AGGREGATIONSTRUCTURE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Column = _reflection.GeneratedProtocolMessageType('Column', (_message.Message,), dict(
  DESCRIPTOR = _COLUMN,
  __module__ = 'karps.proto.structured_transform_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.Column)
  ))
_sym_db.RegisterMessage(Column)

ColumnStructure = _reflection.GeneratedProtocolMessageType('ColumnStructure', (_message.Message,), dict(
  DESCRIPTOR = _COLUMNSTRUCTURE,
  __module__ = 'karps.proto.structured_transform_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.ColumnStructure)
  ))
_sym_db.RegisterMessage(ColumnStructure)

ColumnFunction = _reflection.GeneratedProtocolMessageType('ColumnFunction', (_message.Message,), dict(
  DESCRIPTOR = _COLUMNFUNCTION,
  __module__ = 'karps.proto.structured_transform_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.ColumnFunction)
  ))
_sym_db.RegisterMessage(ColumnFunction)

ColumnExtraction = _reflection.GeneratedProtocolMessageType('ColumnExtraction', (_message.Message,), dict(
  DESCRIPTOR = _COLUMNEXTRACTION,
  __module__ = 'karps.proto.structured_transform_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.ColumnExtraction)
  ))
_sym_db.RegisterMessage(ColumnExtraction)

Aggregation = _reflection.GeneratedProtocolMessageType('Aggregation', (_message.Message,), dict(
  DESCRIPTOR = _AGGREGATION,
  __module__ = 'karps.proto.structured_transform_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.Aggregation)
  ))
_sym_db.RegisterMessage(Aggregation)

AggregationFunction = _reflection.GeneratedProtocolMessageType('AggregationFunction', (_message.Message,), dict(
  DESCRIPTOR = _AGGREGATIONFUNCTION,
  __module__ = 'karps.proto.structured_transform_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.AggregationFunction)
  ))
_sym_db.RegisterMessage(AggregationFunction)

AggregationStructure = _reflection.GeneratedProtocolMessageType('AggregationStructure', (_message.Message,), dict(
  DESCRIPTOR = _AGGREGATIONSTRUCTURE,
  __module__ = 'karps.proto.structured_transform_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.AggregationStructure)
  ))
_sym_db.RegisterMessage(AggregationStructure)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
